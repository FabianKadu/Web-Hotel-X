// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using LibreriaClasesHotel.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace LibreriaClasesHotel.Models
{
    public partial class Hotel_XContext
    {
        private IHotel_XContextProcedures _procedures;

        public virtual IHotel_XContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new Hotel_XContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IHotel_XContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
        }
    }

    public partial class Hotel_XContextProcedures : IHotel_XContextProcedures
    {
        private readonly Hotel_XContext _context;

        public Hotel_XContextProcedures(Hotel_XContext context)
        {
            _context = context;
        }
        
        public virtual async Task<int> InsertarDatosReservacionAsync(string ApellidoCliente, string NombreCliente, string DNICliente, string EmailCliente, string TelefonoCliente, int? NumeroHabitacion, DateTime? FechaInicio, int? DiasEstancia, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ApellidoCliente",
                    Size = 100,
                    Value = ApellidoCliente ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "NombreCliente",
                    Size = 100,
                    Value = NombreCliente ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "DNICliente",
                    Size = 30,
                    Value = DNICliente ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "EmailCliente",
                    Size = 200,
                    Value = EmailCliente ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "TelefonoCliente",
                    Size = 30,
                    Value = TelefonoCliente ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.NVarChar,
                },
                new SqlParameter
                {
                    ParameterName = "NumeroHabitacion",
                    Value = NumeroHabitacion ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "FechaInicio",
                    Value = FechaInicio ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                new SqlParameter
                {
                    ParameterName = "DiasEstancia",
                    Value = DiasEstancia ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[InsertarDatosReservacion] @ApellidoCliente, @NombreCliente, @DNICliente, @EmailCliente, @TelefonoCliente, @NumeroHabitacion, @FechaInicio, @DiasEstancia", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
